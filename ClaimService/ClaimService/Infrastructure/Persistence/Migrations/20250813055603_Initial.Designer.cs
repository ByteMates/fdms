// <auto-generated />
using System;
using ClaimService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClaimService.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250813055603_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClaimService.Domain.Entities.AppSequence", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("NextValue")
                        .HasColumnType("bigint");

                    b.HasKey("Name");

                    b.ToTable("AppSequences");

                    b.HasData(
                        new
                        {
                            Name = "ClaimId",
                            NextValue = 1L
                        },
                        new
                        {
                            Name = "ClaimQueue",
                            NextValue = 1L
                        });
                });

            modelBuilder.Entity("ClaimService.Domain.Entities.Claim", b =>
                {
                    b.Property<string>("ClaimId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("AmountApproved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountClaimed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ClaimDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClaimType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("LastUpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<long?>("QueueNo")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ClaimId");

                    b.HasIndex("ClaimDateUtc");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("QueueNo");

                    b.HasIndex("Status");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("ClaimService.Domain.Entities.ClaimEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ActorUserId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ClaimId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("ClaimEvents");
                });

            modelBuilder.Entity("ClaimService.Domain.Entities.ClaimEvent", b =>
                {
                    b.HasOne("ClaimService.Domain.Entities.Claim", null)
                        .WithMany("Events")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClaimService.Domain.Entities.Claim", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
