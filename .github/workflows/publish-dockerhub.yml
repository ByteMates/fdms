name: Publish Docker Hub

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]   # optional: push versioned tags
  pull_request:
    branches: [ main ]   # run tests/build on PRs

jobs:
  test:
    name: Restore & Test (.NET)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Test
        run: dotnet test --no-build -c Release --logger "trx;LogFileName=test-results.trx"

  publish:
    name: Build & Push Images
    needs: test
    # only push on main or tags (not on PR)
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: authservice
            context: Portal/AuthService
            dockerfile: Portal/AuthService/Dockerfile
            image_suffix: fdms-authservice
          - name: employeeservice
            context: Portal/EmployeeService
            dockerfile: Portal/EmployeeService/Dockerfile
            image_suffix: fdms-employeeservice
          - name: documentservice
            context: Portal/DocumentService
            dockerfile: Portal/DocumentService/Dockerfile
            image_suffix: fdms-documentservice
          - name: claimservice
            context: Portal/ClaimService
            dockerfile: Portal/ClaimService/Dockerfile
            image_suffix: fdms-claimservice
          - name: apigateway
            context: Portal/CentralAPIGateway
            dockerfile: Portal/CentralAPIGateway/Dockerfile
            image_suffix: fdms-apigateway

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build full image name using env secret + matrix suffix
      - name: Compute image name
        id: vars
        run: echo "IMAGE=${DOCKERHUB_USERNAME}/${{ matrix.image_suffix }}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.vars.outputs.IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short,prefix=sha-
            type=ref,event=tag
            type=ref,event=branch
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
